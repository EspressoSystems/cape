// SPDX-License-Identifier: GPL-3.0-or-later

// Copyright (c) 2022 Espresso Systems (espressosys.com)
// This file is part of the Configurable Asset Privacy for Ethereum (CAPE) library.

// This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen_vk_libraries --release`.
pragma solidity ^0.8.0;

import "../interfaces/IPlonkVerifier.sol";
import "./BN254.sol";

library Transfer1In2Out24DepthVk {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 32768)
            // num of public inputs
            mstore(add(vk, 0x20), 14)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                2601115423116897239893469437783815282674518870859439140584670982404446568425
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                21387703072596271753684269571766318413616637905846906200885488548605232081311
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                18093207667326166260941967361503597170970820090303504008548886520781612262607
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                15506241883427907423143246742207987178296655397323901395523216644162934801027
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                17224030688930263671215927622085796838744685640551295700644356316087606194453
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                9871892688266980794424413228644800345365261123544262124587988616929094794446
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                1653423479825136378929731986206672195437753469049273770949830103289522081013
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                18540430158936383317781049369976810237215202752760467051838384048905582651431
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                6182405487934559918414504166029367587453938777975619206648907759838313063029
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                6303636105426570943547672403434638798256828205198194404179645009191642748039
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                18352717355200151877063864360131237083352005873169286557578537755751979692274
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                18535115788456072630383925322523695497891623428396234248738154081372899880584
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                9908258779995310745701077146291771577159654333216970234243768106420988535639
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                5222835988549975732420424607539021146071370844807206884805011103538281824730
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                6941500137865112460544627950260307723514017850007311936769317146419972927588
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                15349893608573380976411985659730584619173031566937770787699017806561190627468
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                21168364095257448760606101143948858356172338924320104703900203452473902441433
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                16660170798361651209023038026794900976183585114965877304784822006074874509205
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                9190952913639104387810968179432225180425197597955362124827814569885452163057
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                18827142612117658766343514941168256204525012530604946506087566444465709027496
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                3087614871980473279723363167422819790187289361998206527420814175739516849267
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                16862987149935139591372068460264503091703957897443470436032581481036423083811
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                9706719488655451993063181268308257527997835452929632143872066940077818386420
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                6236623652447614250698035805861101061802099331620117231564769714805411900300
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                1411379008735327479737723833603528702843470627344722114111584994556861154980
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                3993135852184128345174580298872023693588782847706666657191331001722079392092
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                9846511696349440200252734974300757392144763505883256681697549590162985402181
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                2943021693042093632574100039021179834063372575819762871426673095266988807850
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                6939009262544205005507648947300385820226307867525750603310876841608771115967
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                1744542086304213974542290661478181313186513167898968854980022885020012543803
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                8552076371570768937374027634488546934769058846143601491495678997242529143831
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                9579090530940855809150547321287606050563533435045744882440421353731349593486
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                14499786686191977429340953516175958437978725979354053072854149749281625153583
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                12761628950782571856606556112616580736578801583124069040637032554972765433582
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                11861036760044642147557768929016751187676005432645929589927048931795306751324
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                7411647397974044716846852003118581558974144934962247144410611563600239777076
            )
        }
    }
}
