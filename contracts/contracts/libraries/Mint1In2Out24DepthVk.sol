// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2022 Espresso Systems (espressosys.com)
// This file is part of the Configurable Asset Privacy for Ethereum (CAPE) library.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-libraries --release`.
pragma solidity ^0.8.0;

import "../interfaces/IPlonkVerifier.sol";
import "./BN254.sol";

library Mint1In2Out24DepthVk {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 16384)
            // num of public inputs
            mstore(add(vk, 0x20), 22)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                18715857233450097233566665862469612667705408112918632327151254517366615510853
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                12056659507165533739511169991607046566607546589228993432633519678105063191994
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                14824195002671574468331715635494727121571793218927771429557442195822888294112
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                15545363005844852395434066542267547241977074468438704526560481952507920680442
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                12730937992652390663908670084945912580250489721157445258662047611384656062589
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                13922972325643955705903067190275250069235823502347080251607855678412413832655
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                11205515283341717493374802581094446196264159623530455592177314841729924213298
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                21626228139140341994554265888140425084500331880890693761295353772893134873176
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                1297892505212470170669591175924901147071008882331974691087297632739019966869
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                5046998337256619649328073625306172605427225136111531257681027197976756517579
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                3416126502361838053757816729968531801453964981226124461039874315717193603949
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                13457539169423794765649307630863376252412201646715715024708233511728175887361
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                14560725448400229197269899568322480538530865768296597131421754928016376186765
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                948706310326485520368947730671484733882983133515374382612890953953178516965
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                3629576662585230443325226017156907801568659344982452092584030101519414013585
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                11755059153403672321764085695058203755528587063932979109812536973510125660021
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                11004655709419206490244680738164512138236779409731663166100876015592834374329
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                3075086625849477481019461602494583874758896233088021555313650923393327170396
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                5116214943488395672472205024247672892505731883467355177124324350502474270399
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                5862627121952215177093377764664762757373132220173512585597211838016077936314
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                17591159830764396623974345916017368127032492198578190405514161605820133619635
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                21823861194811124564815272373053730365073236057851878678286985577859771922838
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                4270340305067371269951830198578603793146745643909898988425564374444309637164
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                3429516859933338020020014748205944416226065682096817012737681215798779959358
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                18140449432973717159678873762584078749849242918610972566667541337332136871548
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                9496973080403650076452512345486781056144944295333639818676842964799046293494
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                2679601553769052076036509170798838073426403353317218807312666276919478214029
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                8104020893469546307958011379600482565107943832349081304458473817724197756534
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                15359849857211682094089890949757251089555853826462724721381029431330976452771
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                16491566299722544741678927866350154870498939946959249271831955257228312538659
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                12100931690223724084472313998885551549102209045806672061992493151022394323721
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                789632069622495739311692844331711309820973570859008137449744966665497183364
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                9372499437356245507830218065264333778849228240985893278867565670067559001476
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                5071314442263159884139201702429590502916613589463313571011317767821015131114
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                13714688610643446356217590887080562811494820054657712165894734861828853586333
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                1823119861575201921550763026703044012616621870847156108104965194178825195245
            )
        }
    }
}
