// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2022 Espresso Systems (espressosys.com)
// This file is part of the Configurable Asset Privacy for Ethereum (CAPE) library.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-libraries --release`.
pragma solidity ^0.8.0;

import "../interfaces/IPlonkVerifier.sol";
import "./BN254.sol";

library Transfer1In2Out24DepthVk {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 32768)
            // num of public inputs
            mstore(add(vk, 0x20), 14)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                6451930258054036397165544866644311272180786776693649154889113517935138989324
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                15824498031290932840309269587075035510403426361110328301862825820425402064333
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                16567945706248183214406921539823721483157024902030706018155219832331943151521
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                14506648136467119081958160505454685757895812203258866143116417397069305366174
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                16908805137848644970538829805684573945187052776129406508429516788865993229946
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                13370902069114408370627021011309095482019563080650295231694581484651030202227
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                11385428061273012554614867838291301202096376350855764984558871671579621291507
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                18938480909096008246537758317235530495583632544865390355616243879170108311037
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                7250836052061444170671162428779548720754588271620290284029438087321333136859
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                9774478170511284714380468511107372909275276960243638784016266344709965751507
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                2164661706057106993702119971892524764909406587180616475316536801798272746351
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                7993083931046493938644389635874939373576598203553188654440768055247347522377
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                17875027092910639802264620931724329796279457509298747494670931666396434012177
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                12276180841132702377773827582398158204508221552359644390751974783173207949116
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                6923045257159434019788850173231395134054684072354814328515094196682490129996
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                10297389981574891432841377306749459633586002482842974197875786670892058142179
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                13566140293342467207563198706820126266175769850278450464476746689910443370750
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                4337013617009771491102950113766314929630396941539697665107262932887431611820
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                19545356440018631139549838928930231615194677294299230322568967706100221743452
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                3905268653568739552774781017975590296651581349403516285498718251384231803637
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                3633513776458243190609011598510312470369153119749343878250857605063953894824
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                10348854780537633653024803962077925757963724802390956695225993897601858375068
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                10515123958235902109894586452633863486298290064878690665500349352367945576213
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                20835963785046732330293306231553834880816750576829504030205004088050809531737
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                10349250837084111252673833558497412287345352572732754388450385078539897036072
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                1295954576893766564415821998145161393110346678014886452040838119568563355556
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                18595738613642013642528283665640490180800278502934355301953048187579782737773
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                5708601727819525671780050950771464619626673626810479676243974296923430650735
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                8105844768413379370590866345497514518639783589779028631263566798017351944465
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                13767799708582015119198203890136804463714948257729839866946279972890684141171
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                13976995316216184532948677497270469464100744949177652840098916826286666391978
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                8782060747227562892357029272916715317651514559557103332761644499318601665300
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                10423258206189675762927713311069351374538317153673220039972782365668263479097
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                12712089727236847935392559371166622501626155101609755726562266635070650647609
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                3447947975392962233948092031223758925923495365282112464857270024948603045088
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                4655198050073279486560411245172865913095816956325221266986314415391129730949
            )
        }
    }
}
