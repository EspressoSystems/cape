#!/usr/bin/env bash
# Copyright (c) 2022 Espresso Systems (espressosys.com)
# This file is part of the Configurable Asset Privacy for Ethereum (CAPE) library.
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.

set -euo pipefail

RED='\033[0;31m'
GETH_PORT=8545

if nc -z localhost $GETH_PORT 2>&1; then
    echo -e "${RED}GETH_PORT $GETH_PORT already in use! Aborting"
    exit 1
fi

function remove-directory() {
    if [ -n "$1" ] && [ -d "$1" ]; then
        echo "Removing dir $1"
        rm -r "$1"
    fi
}

# Clean up temporary directories when script exits.
trap "exit" INT TERM
trap cleanup EXIT
cleanup(){
    remove-directory "$CAPE_FAUCET_WALLET_PATH"
    remove-directory "$CAPE_EQS_STORE_PATH"
    remove-directory "$CAPE_ADDRESS_BOOK_STORE_PATH"
    remove-directory "$CAPE_WALLET_STORAGE_ALICE"
    remove-directory "$CAPE_WALLET_STORAGE_BOB"
}

# Build all the rust executables
cargo build --release

# CAPE configuration
export CAPE_WEB3_PROVIDER_URL="http://localhost:$GETH_PORT"

export CAPE_ADDRESS_BOOK_PORT=50000
export CAPE_ADDRESS_BOOK_STORE_PATH=$(mktemp -d -t cape-address-book-store-XXXXXXX)
export CAPE_ADDRESS_BOOK_URL="http://localhost:$CAPE_ADDRESS_BOOK_PORT"

export CAPE_EQS_PORT=50010
export CAPE_EQS_STORE_PATH="$(mktemp -d -t cape-eqs-store-path-XXXXXXX)"
export CAPE_EQS_URL="http://localhost:$CAPE_EQS_PORT"
export CAPE_EQS_NUM_CONFIRMATIONS=1 # More responsive local demo.

export CAPE_RELAYER_PORT=50020
export CAPE_RELAYER_URL="http://localhost:$CAPE_RELAYER_PORT"
export CAPE_RELAYER_WALLET_MNEMONIC="$TEST_MNEMONIC"

export CAPE_FAUCET_PORT=50030
export CAPE_FAUCET_URL="http://localhost:$CAPE_FAUCET_PORT"
export CAPE_FAUCET_WALLET_MNEMONIC="$TEST_MNEMONIC"
export CAPE_FAUCET_WALLET_PATH="$(mktemp -d -t cape-faucet-wallet-XXXXXXX)"


export CAPE_WALLET_PORT_ALICE=50040
export CAPE_WALLET_STORAGE_ALICE="$(mktemp -d -t cape-wallet-alice-XXXXXXX)"
export CAPE_WALLET_PORT_BOB=50041
export CAPE_WALLET_STORAGE_BOB="$(mktemp -d -t cape-wallet-bob-XXXXXXX)"

# File that consolidates the logs
export LOG_FILENAME=/tmp/cape-services-log.txt
# Empty the logs file
> $LOG_FILENAME

# Create a faucet manager wallet and export variables printed to stdout
export CAPE_FAUCET_MANAGER_MNEMONIC="$TEST_MNEMONIC"
source <(target/release/faucet-wallet-test-setup)

# Start a go-ethereum/geth node
env GETH_PERIOD=1 run-geth --verbosity 1 &

# Wait for geth to be listening
wait-port $GETH_PORT

# Deploy contracts
hardhat deploy --reset 2>&1 | tee -a $LOG_FILENAME

# Configure environment
export CAPE_TOKEN_ADDRESS_SIT="$(cat contracts/deployments/localhost/SimpleToken.json | jq -r .address)"
export CAPE_TOKEN_ADDRESS_WETH="$(cat contracts/deployments/localhost/WETH.json | jq -r .address)"
export CAPE_TOKEN_ADDRESS_DAI="$(cat contracts/deployments/localhost/DAI.json | jq -r .address)"
export CAPE_CONTRACT_ADDRESS="$(cat contracts/deployments/localhost//CAPE.json | jq -r .address)"
export CAPE_RELAYER_EMPTY_BLOCK_INTERVAL_SECS="30"

# Start demo services
hivemind demo.Procfile 2>&1 | tee -a $LOG_FILENAME &

# Wait for demo services to be available
wait-port $CAPE_ADDRESS_BOOK_PORT
wait-port $CAPE_EQS_PORT
wait-port $CAPE_RELAYER_PORT
wait-port $CAPE_WALLET_PORT_ALICE
wait-port $CAPE_WALLET_PORT_BOB
wait-port $CAPE_FAUCET_PORT

# Show configuration (using `set` to get quotes around values with spaces)
export CONFIGURATION=$(cat<<EOF

    Local CAPE Demo running

$(set | grep "CAPE_.*=" | sort | sed 's|^|    |')

EOF
)

echo -e "$CONFIGURATION"

echo -e "$CONFIGURATION" >> $LOG_FILENAME

wait
