#!/usr/bin/env bash
set -euo pipefail

RED='\033[0;31m'
GETH_PORT=8545

if nc -z localhost $GETH_PORT 2>&1; then
    echo -e "${RED}GETH_PORT $GETH_PORT already in use! Aborting"
    exit 1
fi

function rmdir() {
    if [ -n "$1" ] && [ -d "$1" ]; then
        echo "Removing dir $1"
        rm -r "$1"
    fi
}

# Clean up temporary directories when script exits.
trap "exit" INT TERM
trap cleanup EXIT
cleanup(){
    rmdir "$CAPE_FAUCET_WALLET_PATH"
    rmdir "$CAPE_EQS_STORE_PATH"
    rmdir "$CAPE_ADDRESS_BOOK_STORE_PATH"
}

# Build all the rust executables
cargo build --release

# CAPE configuration
export CAPE_WEB3_PROVIDER_URL="http://localhost:$GETH_PORT"

export CAPE_ADDRESS_BOOK_PORT=50000
export CAPE_ADDRESS_BOOK_STORE_PATH=$(mktemp -d -t cape-address-book-store-XXXXXXX)
export CAPE_ADDRESS_BOOK_URL="http://localhost:$CAPE_ADDRESS_BOOK_PORT"

export CAPE_EQS_PORT=50010
export CAPE_EQS_URL="http://localhost:$CAPE_EQS_PORT"

export CAPE_RELAYER_PORT=50020
export CAPE_RELAYER_URL="http://localhost:$CAPE_RELAYER_PORT"
export CAPE_RELAYER_WALLET_MNEMONIC="$TEST_MNEMONIC"

export CAPE_FAUCET_PORT=50030
export CAPE_FAUCET_URL="http://localhost:$CAPE_FAUCET_PORT"
export CAPE_FAUCET_WALLET_MNEMONIC="$TEST_MNEMONIC"

export CAPE_WALLET_PORT=50040

# Create a faucet wallet and export variables printed to stdout
export CAPE_FAUCET_WALLET_PATH="$(mktemp -d -t cape-faucet-wallet-XXXXXXX)"
export CAPE_EQS_STORE_PATH="$(mktemp -d -t caep-eqs-store-path-XXXXXXX)"
set -a; source <(target/release/faucet-wallet-test-setup); set +a;

# Start a go-ethereum/geth node
run-geth --verbosity 1 &

# Wait for geth to be listening
wait-port $GETH_PORT

# Deploy contracts
hardhat deploy --reset

# Configure environment
export CAPE_TOKEN_ADDRESS="$(cat contracts/deployments/localhost/SimpleToken.json | jq -r .address)"
export CAPE_CONTRACT_ADDRESS="$(cat contracts/deployments/localhost//CAPE.json | jq -r .address)"

# Start demo services
hivemind demo.Procfile &

# Wait for demo services to be available
wait-port $CAPE_ADDRESS_BOOK_PORT
wait-port $CAPE_EQS_PORT
wait-port $CAPE_RELAYER_PORT
wait-port $CAPE_WALLET_PORT
wait-port $CAPE_FAUCET_PORT

# Show configuration (using `set` to get quotes around values with spaces)
cat<<EOF

    Local CAPE Demo running

$(set | grep "CAPE_.*=" | sort | sed 's|^|    |')

EOF

wait
